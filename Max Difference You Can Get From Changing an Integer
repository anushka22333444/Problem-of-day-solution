class Solution {
    public int maxDiff(int num) {
        String numStr = String.valueOf(num);
        Set<Character> uniqueDigits = new HashSet<>();

        // Collect unique digits
        for (int i = 0; i < numStr.length(); i++) {
            uniqueDigits.add(numStr.charAt(i));
        }

        int maxVal = num;
        int minVal = num;

        // Iterate over each unique digit
        for (Iterator<Character> it = uniqueDigits.iterator(); it.hasNext(); ) {
            char digit = it.next();

            // Try replacing with every digit from '0' to '9'
            for (char newDigit = '0'; newDigit <= '9'; newDigit++) {
                if (numStr.charAt(0) == digit && newDigit == '0') {
                    continue; // Skip leading zero
                }

                // Replace digit with newDigit
                StringBuilder newNumStr = new StringBuilder();
                for (int i = 0; i < numStr.length(); i++) {
                    if (numStr.charAt(i) == digit) {
                        newNumStr.append(newDigit);
                    } else {
                        newNumStr.append(numStr.charAt(i));
                    }
                }

                int newNum = Integer.parseInt(newNumStr.toString());
                maxVal = Math.max(maxVal, newNum);
                minVal = Math.min(minVal, newNum);
            }
        }

        return maxVal - minVal;
    }
}
