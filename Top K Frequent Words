class Solution {
    public List<String> topKFrequent(String[] words, int k) {
        HashMap<String,Integer> map = new HashMap<>();
        for(int i =0; i<words.length;i++){
            String word = words[i];
            map.put(word, map.getOrDefault(word,0)+1);
        }
        PriorityQueue<String> pq = new PriorityQueue<>((a,b) ->{
          int freqA = map.get(a);
        int freqB = map.get(b);
           if(freqA != freqB){
            return freqB - freqA;
           } return a.compareTo(b);
           });

           for(Map.Entry<String,Integer> entry : map.entrySet()){
            pq.offer(entry.getKey());
           }
           List<String> result = new ArrayList<>();
           for(int i =0; i<k && !pq.isEmpty(); i++){
            result.add(pq.poll());
           }
           return result;
    }
}
